{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/Checkout/ContactData/ContactData.module.css","store/actions/actionTypes.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/burgerBuilder.js","store/actions/order.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","updateObject","oldObject","updatedProperties","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","addPrice","toFixed","Number","removeIngredient","updatedIng","updatedIngs","subtractPrice","setIngredients","ings","fetchIngredientsFailed","reducer","type","actionTypes","orders","loading","purchased","purchaseInit","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","deleteOrderSuccess","deleteOrderFail","orderReducer","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","ctr","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","price","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","initIngredients","dispatch","get","then","data","catch","currentOrders","purchaseBurger","post","name","fetchOrders","fetchedOrders","key","push","deleteOrder","updatedOrders","put","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","pathname","onInitIngredients","disabledInfo","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","connect","burgerBuilder","ingredName","actions","ingredType","checkoutSummary","CheckoutSummary","BurgerContainer","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","checkboxClasses","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","option","displayValue","InputCheckbox","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","options","consent","checked","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","isChecked","checkIfMarked","target","checkValidity","undefined","rules","isValid","trim","marked","formElementsArray","config","form","onSubmit","element","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","path","match","component","amount","ingredientOutput","ig","Box","Order","onButtonClick","Orders","onFetchOrders","onDeleteOrder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","burgerBuilderReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dc306a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3yTzk\",\"BreadTop\":\"BurgerIngredient_BreadTop__2nOcm\",\"Seeds1\":\"BurgerIngredient_Seeds1__2qgSu\",\"Seeds2\":\"BurgerIngredient_Seeds2__25idf\",\"Meat\":\"BurgerIngredient_Meat__2SvOz\",\"Cheese\":\"BurgerIngredient_Cheese__YYUqz\",\"Salad\":\"BurgerIngredient_Salad__2x6ZC\",\"Bacon\":\"BurgerIngredient_Bacon__1m_0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3O7BG\",\"Label\":\"Input_Label__2Y7UN\",\"InputElement\":\"Input_InputElement__lTS0W\",\"InputCheckbox\":\"Input_InputCheckbox__2pXqb\",\"Invalid\":\"Input_Invalid__1kmCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1c83j\",\"Open\":\"SideDrawer_Open__eqAC8\",\"Close\":\"SideDrawer_Close__cYHby\",\"Logo\":\"SideDrawer_Logo__3qxcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3sQFO\",\"Label\":\"BuildControl_Label__2SyQN\",\"Less\":\"BuildControl_Less__15AWc\",\"More\":\"BuildControl_More__1htbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3Q4Sc\",\"Logo\":\"Toolbar_Logo__12vph\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2an84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem___GVoD\",\"active\":\"NavigationItem_active__Y0tRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1UqGD\",\"OrderButton\":\"BuildControls_OrderButton__1hva6\",\"enable\":\"BuildControls_enable__2cb6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__flhWF\",\"Success\":\"Button_Success__10HGj\",\"Danger\":\"Button_Danger__2Fe1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1hb8q\",\"BurgerContainer\":\"CheckoutSummary_BurgerContainer__8MBCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__iY-xG\",\"Box\":\"Order_Box__1xyDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3_Kkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1GpOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__dCZkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__dzRWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2SjnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1YF_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1bg6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2_DTP\",\"load6\":\"Spinner_load6__35wS9\",\"round\":\"Spinner_round__3_r5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1JYhi\"};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\nexport const DELETE_ORDER_SUCCESS='DELETE_ORDER_SUCCESS';\r\nexport const DELETE_ORDER_FAIL='DELETE_ORDER_FAIL';","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    let addPrice = (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(2);\r\n    addPrice = Number(addPrice);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: addPrice\r\n    };\r\n\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    let subtractPrice = (state.totalPrice - INGREDIENT_PRICES[action.ingredientName]).toFixed(2);\r\n    subtractPrice = Number(subtractPrice);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: subtractPrice\r\n    };\r\n\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ings.salad,\r\n            bacon: action.ings.bacon,\r\n            cheese: action.ings.cheese,\r\n            meat: action.ings.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n       orders: [],\r\n       loading: false,\r\n       purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n       return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n       return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n       const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n       return updateObject(state, {\r\n              orders: state.orders.concat(newOrder),\r\n              loading: false,\r\n              purchased: true\r\n       });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n       return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n       return updateObject(state, { loading: true })\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n       return updateObject(state, {\r\n              orders: action.orders,\r\n              loading: false\r\n       });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n       return updateObject(state, { loading: false });\r\n};\r\n\r\nconst deleteOrderSuccess = (state, action) => {\r\n       return updateObject(state, { orders: action.orders });\r\n};\r\n\r\nconst deleteOrderFail = (state, action) => {\r\n       return updateObject(state, { error: action.error });\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n       switch (action.type) {\r\n              case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n              case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n              case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n              case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n              case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n              case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n              case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n              case actionTypes.DELETE_ORDER_SUCCESS: return deleteOrderSuccess(state, action);\r\n              case actionTypes.DELETE_ORDER_FAIL: return deleteOrderFail(state, action);\r\n              default: return state;\r\n       }\r\n};\r\n\r\n\r\nexport default orderReducer;","const aux=(props)=> props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"My Burger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css'\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/my-orders\">Orders</NavigationItem>        \r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle}onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop=(props)=>(\r\n\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses=[classes.SideDrawer, classes.Close];\r\n\r\n    if(props.open){\r\n        attachedClasses=[classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n  \r\n    render(){\r\n\r\n        let ingredient=null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient=<div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient=(\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case('meat'):\r\n                ingredient=<div className={classes.Meat}></div>\r\n                break;\r\n            case('cheese'):\r\n                ingredient=<div className={classes.Cheese}></div>\r\n                break;\r\n            case('salad'):\r\n                ingredient=<div className={classes.Salad}></div>\r\n                break;\r\n            case('bacon'):\r\n                ingredient=<div className={classes.Bacon}></div>\r\n                break;\r\n            default:\r\n                ingredient=null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes={\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger=(props)=>{\r\n\r\n    let transformedIngredients=Object.keys(props.ingredients)\r\n            .map(igKey=>{ \r\n                return [...Array(props.ingredients[igKey])].map((_, i)=>{\r\n                    return <BurgerIngredient key={igKey+i} type={igKey}/>\r\n                });\r\n            })\r\n            .reduce((arr, el)=>{\r\n                return arr.concat(el)\r\n            },[]);\r\n\r\n            // console.log(transformedIngredients)\r\n\r\n    if(transformedIngredients.length===0){\r\n        transformedIngredients=<p>\"Please add some ingredients\"</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from '../BuildControls/BuildControls.module.css';\r\n\r\n\r\nconst controls=[\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n]\r\n\r\nconst buildControls=(props)=>(\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.totalPrice.toFixed(2)}$</strong></p>\r\n        {controls.map(ctr=>(\r\n            <BuildControl \r\n            key={ctr.label} \r\n            label={ctr.label} \r\n            added={()=>props.ingredientAdded(ctr.type)}\r\n            removed={()=>props.ingredientRemoved(ctr.type)}\r\n            disabled={props.disabled[ctr.type]}\r\n            />\r\n        ))}\r\n        <button \r\n        className={classes.OrderButton} \r\n        disabled={!props.purchasable} \r\n        onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show!==this.props.show || nextProps.children!==this.props.children\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('[Modal.js] DidUpdate');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked} disabled={props.disabled}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    componentDidUpdate(){\r\n        console.log('[OrderSummary] DidUpdate');\r\n    }\r\n\r\n    render() {\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (<li key={igKey}>\r\n                    <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li>);\r\n            })\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}$</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType='Danger' clicked={this.props.purchaseCancelled} children='CANCEL'></Button>\r\n                <Button btnType='Success' clicked={this.props.purchaseContinued} children='CONTINUE'></Button>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n\r\n\r\n    return class extends Component {\r\n\r\n        state = { \r\n            error: null \r\n        }\r\n\r\n        UNSAFE_componentWillMount() {\r\n\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\n\r\nconst instance=axios.create({\r\n    baseURL: 'https://react-burger-builder-c365e-default-rtdb.europe-west1.firebasedatabase.app/'\r\n})\r\n\r\n\r\nexport default instance;","import axios from '../../axios-orders'\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const addIngredient = (ingredName) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: ingredName\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (ingredType) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: ingredType\r\n    };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ings: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-builder-c365e-default-rtdb.europe-west1.firebasedatabase.app/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nlet currentOrders = null;\r\n\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n\r\n        axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n            .then(response => {\r\n                currentOrders = response.data; //response.data saved globally for the future use in the deleteOrder action creator\r\n                // console.log(currentOrders);\r\n                const fetchedOrders = [];\r\n\r\n                for (let key in currentOrders) {\r\n                    // console.log(response.data[key]);\r\n\r\n                    fetchedOrders.push({\r\n                        ...currentOrders[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                // console.log('fetchedOrders: ', fetchedOrders);\r\n\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteOrderSuccess = (updatedOrders) => {\r\n    return {\r\n        type: actionTypes.DELETE_ORDER_SUCCESS,\r\n        orders: updatedOrders\r\n    };\r\n};\r\n\r\nexport const deleteOrderFail = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_ORDER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const deleteOrder = (id) => {\r\n\r\n    for(let key in currentOrders){//after deleting the order that was send through the action the updated 'currentOrders' is send with axios to the database\r\n        if(key===id){\r\n            delete currentOrders[key];\r\n        }\r\n    }\r\n\r\n    const updatedOrders=[];\r\n\r\n    for(let key in currentOrders){ // in the for loop the orders from 'currentOrders' are pushed to the array updatedOrders; later they will be passed through deleteOrderSuccess action to update the orders saved in the store\r\n        \r\n        updatedOrders.push({\r\n            ...currentOrders[key],\r\n            id: key\r\n        })\r\n    }\r\n    // console.log('allOrders: ', allOrders)\r\n    // console.log('updatedOrders: ', updatedOrders)\r\n\r\n    return dispatch => {\r\n        axios.put('/orders.json', currentOrders) \r\n            .then(response => {\r\n\r\n                dispatch(deleteOrderSuccess(updatedOrders));\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch(deleteOrderFail(error));\r\n            });\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('this props: ',this.props);\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el\r\n            }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({ pathname: '/checkout' });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        totalPrice={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                    />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price} />;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingredName) => dispatch(actions.addIngredient(ingredName)),\r\n        onIngredientRemoved: (ingredType) => dispatch(actions.removeIngredient(ingredType)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div className={classes.BurgerContainer}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses=[classes.InputElement];\r\n    const checkboxClasses=[classes.Label];\r\n    \r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n        checkboxClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} \r\n                    onChange={props.changed}>\r\n                    {props.elementConfig['options'].map(option => (\r\n                        <option  key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>);\r\n            break;\r\n        case ('input_checkbox'):\r\n            inputElement=(\r\n            <label className={checkboxClasses.join(' ')}>\r\n                <input className={classes.InputCheckbox} {...props.elementConfig}\r\n                onChange={props.changed}/>{props.label}\r\n            </label>);\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as actions from '../../../store/actions/index';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            },\r\n\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            },\r\n\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: false\r\n                },\r\n                value: 'cheapest',\r\n            },\r\n\r\n            consent: {\r\n                elementType: 'input_checkbox',\r\n                elementConfig: {\r\n                    type: 'checkbox',\r\n                    value: 'consentGranted',\r\n                },\r\n                label: 'I agree for the processing of my personal data.',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                checked: false,\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {}\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        // console.log(formData);\r\n\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.trim().length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.trim().length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    checkIfMarked(marked, rules) {\r\n        return marked && rules.required ? true : false;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n\r\n        if (inputIdentifier === 'consent') {\r\n            let isChecked = updatedFormElement.checked;\r\n            updatedFormElement.checked = !isChecked;\r\n            updatedFormElement.valid = this.checkIfMarked(updatedFormElement.checked, updatedFormElement.validation);\r\n        } else {\r\n            updatedFormElement.value = event.target.value;\r\n            updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        }\r\n\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            if (updatedOrderForm[inputIdentifier].valid !== undefined) {\r\n                formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n            }\r\n        }\r\n\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n    }\r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n\r\n            // console.log(this.state.orderForm[key]);\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(element => (\r\n                    <Input key={element.id}\r\n                        elementType={element.config.elementType}\r\n                        elementConfig={element.config.elementConfig}\r\n                        value={element.config.value}\r\n                        label={element.config.label}\r\n                        invalid={!element.config.valid}\r\n                        shouldValidate={element.config.validation}\r\n                        touched={element.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, element.id)}\r\n                    />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        )\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        if(this.props.purchased){\r\n            form=<Redirect to=\"/\"/>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter Your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (order) => dispatch(actions.purchaseBurger(order))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            summary = (\r\n                <div>\r\n                    <CheckoutSummary\r\n                    ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route\r\n                    path={this.props.match.path + '/contact-data'}\r\n                    component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n        className={classes.Box}\r\n        key={ig.name}>{ig.name} ({ig.amount}), </span>;\r\n    })\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredient: {ingredientOutput}</p>\r\n            <p>Price:<strong>USD {props.price}</strong></p>\r\n            <Button btnType='Danger' children='DELETE' clicked={props.onButtonClick}></Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} \r\n                    onButtonClick={()=>this.props.onDeleteOrder(order.id)}/>\r\n            ))\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders()),\r\n        onDeleteOrder: (id)=> dispatch(actions.deleteOrder(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component, } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/my-orders\" component={Orders} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n          </Switch>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter basename=\"/burger_builder/\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}