{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","reportWebVitals.js","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","navMenu","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","totalPrice","toFixed","ctr","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","price","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","initIngredients","dispatch","get","data","actionTypes","ings","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","queryParams","currentOrders","fetchedOrders","key","push","orders","fetchOrdersFail","deleteOrder","put","deleteOrderFail","authSuccess","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","authFail","setAuthRedirectPath","path","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","onSetAuthRedirectPath","history","pathname","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","burgerBuilder","ingredName","ingredientName","actions","ingredType","checkoutSummary","CheckoutSummary","BurgerContainer","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","checkboxClasses","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","option","displayValue","InputCheckbox","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","options","consent","checked","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","isChecked","checkIfMarked","target","checkValidity","undefined","rules","isValid","trim","marked","formElementsArray","config","form","onSubmit","element","loading","purchased","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","match","component","amount","ingredientOutput","ig","Box","Order","onButtonClick","Orders","onFetchOrders","onDeleteOrder","Auth","isEmail","controlName","updatedControls","control","submitHandler","onAuth","switchAuthModeHandler","building","authRedirectPath","split","includes","formElment","errorMessage","authRedirect","Logout","onLogout","App","onTryAutoSignup","routes","getItem","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedIngredients","addPrice","Number","removeIngredient","updatedIng","updatedIngs","subtractPrice","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","deleteOrderSuccess","orderReducer","authStart","rootReducer","combineReducers","burgerBuilderReducer","authReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9c054b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3yTzk\",\"BreadTop\":\"BurgerIngredient_BreadTop__2nOcm\",\"Seeds1\":\"BurgerIngredient_Seeds1__2qgSu\",\"Seeds2\":\"BurgerIngredient_Seeds2__25idf\",\"Meat\":\"BurgerIngredient_Meat__2SvOz\",\"Cheese\":\"BurgerIngredient_Cheese__YYUqz\",\"Salad\":\"BurgerIngredient_Salad__2x6ZC\",\"Bacon\":\"BurgerIngredient_Bacon__1m_0n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3O7BG\",\"Label\":\"Input_Label__2Y7UN\",\"InputElement\":\"Input_InputElement__lTS0W\",\"InputCheckbox\":\"Input_InputCheckbox__2pXqb\",\"Invalid\":\"Input_Invalid__1kmCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1c83j\",\"Open\":\"SideDrawer_Open__eqAC8\",\"Close\":\"SideDrawer_Close__cYHby\",\"Logo\":\"SideDrawer_Logo__3qxcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3sQFO\",\"Label\":\"BuildControl_Label__2SyQN\",\"Less\":\"BuildControl_Less__15AWc\",\"More\":\"BuildControl_More__1htbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3Q4Sc\",\"Logo\":\"Toolbar_Logo__12vph\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2an84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__dCZkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem___GVoD\",\"active\":\"NavigationItem_active__Y0tRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1UqGD\",\"OrderButton\":\"BuildControls_OrderButton__1hva6\",\"enable\":\"BuildControls_enable__2cb6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__flhWF\",\"Success\":\"Button_Success__10HGj\",\"Danger\":\"Button_Danger__2Fe1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1hb8q\",\"BurgerContainer\":\"CheckoutSummary_BurgerContainer__8MBCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__iY-xG\",\"Box\":\"Order_Box__1xyDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3_Kkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1GpOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__dzRWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2SjnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1YF_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1bg6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2_DTP\",\"load6\":\"Spinner_load6__35wS9\",\"round\":\"Spinner_round__3_r5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1JYhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__23ZFq\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const aux=(props)=> props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"My Burger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css'\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => {\r\n    let navMenu = (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n            <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n        </ul>\r\n    )\r\n\r\n    if (props.isAuthenticated) {\r\n        navMenu = (\r\n            <ul className={classes.NavigationItems}>\r\n                <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n                <NavigationItem link=\"/my-orders\">Orders</NavigationItem>\r\n                <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return navMenu;\r\n};\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle}onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop=(props)=>(\r\n\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses=[classes.SideDrawer, classes.Close];\r\n\r\n    if(props.open){\r\n        attachedClasses=[classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !==null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, {Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n  \r\n    render(){\r\n\r\n        let ingredient=null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient=<div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient=(\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case('meat'):\r\n                ingredient=<div className={classes.Meat}></div>\r\n                break;\r\n            case('cheese'):\r\n                ingredient=<div className={classes.Cheese}></div>\r\n                break;\r\n            case('salad'):\r\n                ingredient=<div className={classes.Salad}></div>\r\n                break;\r\n            case('bacon'):\r\n                ingredient=<div className={classes.Bacon}></div>\r\n                break;\r\n            default:\r\n                ingredient=null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes={\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger=(props)=>{\r\n\r\n    let transformedIngredients=Object.keys(props.ingredients)\r\n            .map(igKey=>{ \r\n                return [...Array(props.ingredients[igKey])].map((_, i)=>{\r\n                    return <BurgerIngredient key={igKey+i} type={igKey}/>\r\n                });\r\n            })\r\n            .reduce((arr, el)=>{\r\n                return arr.concat(el)\r\n            },[]);\r\n\r\n            // console.log(transformedIngredients)\r\n\r\n    if(transformedIngredients.length===0){\r\n        transformedIngredients=<p>\"Please add some ingredients\"</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from '../BuildControls/BuildControls.module.css';\r\n\r\n\r\nconst controls=[\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n]\r\n\r\nconst buildControls=(props)=>(\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.totalPrice.toFixed(2)}$</strong></p>\r\n        {controls.map(ctr=>(\r\n            <BuildControl \r\n            key={ctr.label} \r\n            label={ctr.label} \r\n            added={()=>props.ingredientAdded(ctr.type)}\r\n            removed={()=>props.ingredientRemoved(ctr.type)}\r\n            disabled={props.disabled[ctr.type]}\r\n            />\r\n        ))}\r\n        <button \r\n        className={classes.OrderButton} \r\n        disabled={!props.purchasable} \r\n        onClick={props.ordered}>{props.isAuth? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show!==this.props.show || nextProps.children!==this.props.children\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('[Modal.js] DidUpdate');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked} disabled={props.disabled}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    componentDidUpdate(){\r\n        console.log('[OrderSummary] DidUpdate');\r\n    }\r\n\r\n    render() {\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (<li key={igKey}>\r\n                    <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li>);\r\n            })\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}$</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType='Danger' clicked={this.props.purchaseCancelled} children='CANCEL'></Button>\r\n                <Button btnType='Success' clicked={this.props.purchaseContinued} children='CONTINUE'></Button>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n\r\n\r\n    return class extends Component {\r\n\r\n        state = { \r\n            error: null \r\n        }\r\n\r\n        UNSAFE_componentWillMount() {\r\n\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-c365e-default-rtdb.europe-west1.firebasedatabase.app/'\r\n})\r\n\r\n\r\nexport default instance;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS';\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import axios from '../../axios-orders'\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const addIngredient = (ingredName) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: ingredName\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (ingredType) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: ingredType\r\n    };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ings: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-builder-c365e-default-rtdb.europe-west1.firebasedatabase.app/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(response => {\r\n                let currentOrders = response.data;\r\n                // console.log(currentOrders);\r\n                const fetchedOrders = [];\r\n\r\n                for (let key in currentOrders) {\r\n                    // console.log(response.data[key]);\r\n                    fetchedOrders.push({\r\n                        ...currentOrders[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                // console.log('fetchedOrders: ', fetchedOrders);\r\n\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteOrderSuccess = () => {\r\n    return {\r\n        type: actionTypes.DELETE_ORDER_SUCCESS,\r\n    };\r\n};\r\n\r\nexport const deleteOrderFail = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_ORDER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const deleteOrder = (id, token, userId) => {\r\n    return dispatch => {\r\n        const deletedOrder = {};\r\n        axios.put('orders/' + id + '.json?auth=' + token, deletedOrder)//replacing the order to be deleted with the empty object\r\n            .then(response => {\r\n                dispatch(deleteOrderSuccess());\r\n                dispatch(fetchOrders(token, userId));\r\n            })\r\n            .catch(error => {\r\n                dispatch(deleteOrderFail(error));\r\n            })\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        userId: userId,\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\nexport const authLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    // console.log('expirationTime: ', expirationTime)\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(authLogout());\r\n        }, expirationTime)\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDZf0qAiVuZlPvQuuMthmyLQFciIU0y79Q';\r\n\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDZf0qAiVuZlPvQuuMthmyLQFciIU0y79Q';\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                // console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                // console.log(expirationDate);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn*1000));\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response.data.error);\r\n                dispatch(authFail(error.response.data.error));\r\n            })\r\n    };\r\n\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(authLogout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n\r\n                const userId=localStorage.getItem('userId');\r\n               \r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout(expirationDate.getTime()-new Date().getTime()));\r\n            }else{\r\n                dispatch(authLogout());\r\n            }\r\n\r\n        }\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('this props: ',this.props);\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el\r\n            }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({ purchasing: true });\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push({ pathname: '/auth' });\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push({ pathname: '/checkout' });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        totalPrice={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                    />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price} />;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingredName) => dispatch(actions.addIngredient(ingredName)),\r\n        onIngredientRemoved: (ingredType) => dispatch(actions.removeIngredient(ingredType)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div className={classes.BurgerContainer}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses=[classes.InputElement];\r\n    const checkboxClasses=[classes.Label];\r\n    \r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n        checkboxClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} \r\n                    onChange={props.changed}>\r\n                    {props.elementConfig['options'].map(option => (\r\n                        <option  key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>);\r\n            break;\r\n        case ('input_checkbox'):\r\n            inputElement=(\r\n            <label className={checkboxClasses.join(' ')}>\r\n                <input className={classes.InputCheckbox} {...props.elementConfig}\r\n                onChange={props.changed}/>{props.label}\r\n            </label>);\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport * as actions from '../../../store/actions/index';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            },\r\n\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n\r\n            },\r\n\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: false\r\n                },\r\n                value: 'cheapest',\r\n            },\r\n\r\n            consent: {\r\n                elementType: 'input_checkbox',\r\n                elementConfig: {\r\n                    type: 'checkbox',\r\n                    value: 'consentGranted',\r\n                },\r\n                label: 'I agree for the processing of my personal data.',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                checked: false,\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {}\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        // console.log(formData);\r\n\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.trim().length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.trim().length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    checkIfMarked(marked, rules) {\r\n        return marked && rules.required ? true : false;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n\r\n        if (inputIdentifier === 'consent') {\r\n            let isChecked = updatedFormElement.checked;\r\n            updatedFormElement.checked = !isChecked;\r\n            updatedFormElement.valid = this.checkIfMarked(updatedFormElement.checked, updatedFormElement.validation);\r\n        } else {\r\n            updatedFormElement.value = event.target.value;\r\n            updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        }\r\n\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            if (updatedOrderForm[inputIdentifier].valid !== undefined) {\r\n                formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n            }\r\n        }\r\n\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n    }\r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n\r\n            // console.log(this.state.orderForm[key]);\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(element => (\r\n                    <Input key={element.id}\r\n                        elementType={element.config.elementType}\r\n                        elementConfig={element.config.elementConfig}\r\n                        value={element.config.value}\r\n                        label={element.config.label}\r\n                        invalid={!element.config.valid}\r\n                        shouldValidate={element.config.validation}\r\n                        touched={element.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, element.id)}\r\n                    />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        )\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        if(this.props.purchased){\r\n            form=<Redirect to=\"/\"/>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter Your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        purchased: state.order.purchased,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (order, token) => dispatch(actions.purchaseBurger(order, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            summary = (\r\n                <div>\r\n                    <CheckoutSummary\r\n                    ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler}/>\r\n                    <Route\r\n                    path={this.props.match.path + '/contact-data'}\r\n                    component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n        className={classes.Box}\r\n        key={ig.name}>{ig.name} ({ig.amount}), </span>;\r\n    })\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredient: {ingredientOutput}</p>\r\n            <p>Price:<strong>USD {props.price}</strong></p>\r\n            <Button btnType='Danger' children='DELETE' clicked={props.onButtonClick}></Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} \r\n                    onButtonClick={()=>this.props.onDeleteOrder(order.id, this.props.token, this.props.userId)}/>\r\n            ))\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {//passing the token to the action creators so that it can be passed in the request; \r\n        //thanks to that the permission to read and write in the database is granted\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n        onDeleteOrder: (id, token, userId)=> dispatch(actions.deleteOrder(id, token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password',\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true,\r\n        formIsValid: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.building && this.props.authRedirectPath !=='/'){\r\n            this.props.onSetAuthRedirectPath('/');\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.trim().length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.trim().length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            isValid = value.trim().split('').includes('@') ? true : false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n\r\n        let formIsValid = true;\r\n\r\n        for (let control in updatedControls) {\r\n            formIsValid = updatedControls[control].valid === true && formIsValid === true\r\n        }\r\n\r\n        this.setState({ controls: updatedControls, formIsValid: formIsValid });\r\n    }\r\n\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    };\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup };\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        };\r\n\r\n        let form = formElementsArray.map(formElment => (\r\n            <Input\r\n                key={formElment.id}\r\n                elementType={formElment.config.elementType}\r\n                elementConfig={formElment.config.elementConfig}\r\n                value={formElment.config.value}\r\n                invalid={!formElment.config.valid}\r\n                shouldValidate={formElment.config.validation}\r\n                touched={formElment.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElment.id)}\r\n            />\r\n        )\r\n        );\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n\r\n        let errorMessage = null;\r\n        let authRedirect = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        if(this.props.isAuthenticated){\r\n            authRedirect=<Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType='Success' disabled={!this.state.formIsValid}>SUBMIT</Button>\r\n                </form>\r\n                <Button\r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType='Danger'>SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div >\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        building: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.authLogout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component, } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/my-orders\" component={Orders} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    let addPrice = (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(2);\r\n    addPrice = Number(addPrice);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: addPrice,\r\n        building: true\r\n    };\r\n\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    let subtractPrice = (state.totalPrice - INGREDIENT_PRICES[action.ingredientName]).toFixed(2);\r\n    subtractPrice = Number(subtractPrice);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: subtractPrice,\r\n        building: true\r\n    };\r\n\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ings.salad,\r\n            bacon: action.ings.bacon,\r\n            cheese: action.ings.cheese,\r\n            meat: action.ings.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n       orders: [],\r\n       loading: false,\r\n       purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n       return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n       return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n       const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n       return updateObject(state, {\r\n              orders: state.orders.concat(newOrder),\r\n              loading: false,\r\n              purchased: true\r\n       });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n       return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n       return updateObject(state, { loading: true })\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n       return updateObject(state, {\r\n              orders: action.orders,\r\n              loading: false\r\n       });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n       return updateObject(state, { loading: false });\r\n};\r\n\r\nconst deleteOrderSuccess = (state, action) => {\r\n       return updateObject(state);\r\n};\r\n\r\nconst deleteOrderFail = (state, action) => {\r\n       return updateObject(state, { error: action.error });\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n       switch (action.type) {\r\n              case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n              case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n              case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n              case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n              case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n              case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n              case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n              case actionTypes.DELETE_ORDER_SUCCESS: return deleteOrderSuccess(state, action);\r\n              case actionTypes.DELETE_ORDER_FAIL: return deleteOrderFail(state, action);\r\n              default: return state;\r\n       }\r\n};\r\n\r\n\r\nexport default orderReducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter basename=\"/burger_builder\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}